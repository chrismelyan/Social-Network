{"version":3,"file":"static/js/966.6681aebc.chunk.js","mappings":"mKACA,G,QAA4B,8BAA5B,EAA0E,kCAA1E,EAAmH,wBAAnH,EAA0J,gCAA1J,EAAqM,4BCArM,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA+F,6BAA/F,EAAqI,6BAArI,EAA6K,+B,6BCqB7K,EAbqB,SAACA,GAClB,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAE,qBAAgBH,EAAMI,IAAMH,UAAW,qBAAEI,SAAyBH,EAAWA,GAAxF,UACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKI,IAAKC,EAAQN,UAAWC,EAAUM,IAAK,WAC3CR,EAAMS,aCd3B,EAA6D,yBAA7D,EAA+F,wBAA/F,EAAgI,wBAAhI,EAAgK,uBAAhK,EAA8L,sBAA9L,EAA2N,sBCgC3N,EA1BgB,SAACT,GACb,IAAMU,GAAO,IAAIC,MAAOC,WASlBC,EARa,WACf,IAAIC,GAAS,IAAIH,MAAOI,aACxB,OAAID,EAAS,GACF,IAAMA,EAENA,EAGCC,GAEhB,OACI,iBAAKd,UAAWC,EAAhB,WACI,gBAAKI,IAAKC,EAAQC,IAAK,SAAUP,UAAWC,KAE5C,gBAAKD,UAAWC,KAEhB,gBAAKD,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SAAyBF,EAAMgB,aAEnC,gBAAKf,UAAWC,EAAhB,mBAA4BQ,EAA5B,YAAoCG,S,iDCchD,EA7BuB,SAACb,GACpB,IAMMiB,EAAmBC,EAAAA,GAAW,CAChCC,WAAYD,EAAAA,KAAaE,IAAI,IAAjB,2BAAkDC,SAAS,cAG3E,OACI,0BACA,SAAC,KAAD,CACIC,cAbiC,CACrCH,WAAY,IAaRF,iBAAkBA,EAClBM,SAAU,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,WAZR,SAACD,GACjBxB,EAAM0B,YAAYF,EAAOL,YAYjBQ,CAAcH,GACdC,EAAU,CAACD,OAAQ,CAACL,WAAY,OALxC,UAOI,UAAC,KAAD,YACI,SAACS,EAAA,EAAD,CAAaC,QAAS,WAAYpB,KAAM,aAAcqB,YAAa,uBACnE,mBAAQ7B,UAAWC,EAAAA,EAAAA,OAAU6B,KAAM,SAAnC,0BCIhB,EAzBkB,SAAC/B,GAEf,IAAIgC,EAAoBhC,EAAMiC,cAAcC,UAAUC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAyB3B,KAAM2B,EAAE3B,KAAML,GAAIgC,EAAEhC,IAA1BgC,EAAEhC,OAChFiC,EAAmBrC,EAAMiC,cAAcK,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAoBvB,QAASuB,EAAEvB,SAAjBuB,EAAEnC,OAM7E,OAAKJ,EAAMwC,QAEP,iBAAKvC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK8B,KAEL,iBAAK/B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SAAyBmC,OAE7B,SAAC,EAAD,CAAgBX,YAdN,SAACP,GACnBnB,EAAM0B,YAAYP,aAGI,SAAC,KAAD,CAAUhB,GAAI,Y,6BCW5C,GAAesC,EAAAA,EAAAA,IAA6BC,EAAAA,GACxCC,EAAAA,EAAAA,KAdoB,SAACC,GACrB,MAAO,CACHX,cAAeW,EAAMX,cACrBO,OAAQI,EAAMC,KAAKL,WAGA,SAACM,GACxB,MAAO,CACHpB,YAAa,SAACqB,GACVD,GAASE,EAAAA,EAAAA,GAAcD,SAInC,EAjB2B,SAAC/C,GACxB,OAAO,SAAC,EAAD,CAAWiC,cAAejC,EAAMiC,cAAeP,YAAa1B,EAAM0B,YAAac,OAAQxC,EAAMwC","sources":["webpack://type-app/./src/components/Pages/Dialogues/Dialogues.module.css?2cee","webpack://type-app/./src/components/Pages/Dialogues/DialogueItem/DialogueItem.module.css?c9fb","components/Pages/Dialogues/DialogueItem/DialogueItem.tsx","webpack://type-app/./src/components/Pages/Dialogues/Message/Message.module.css?5549","components/Pages/Dialogues/Message/Message.tsx","components/Pages/Dialogues/Message/AddMessageForm.tsx","components/Pages/Dialogues/Dialogues.tsx","components/Pages/Dialogues/DialoguesContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogues\":\"Dialogues_dialogues__3AfSk\",\"dialoguesItems\":\"Dialogues_dialoguesItems__H5tz6\",\"item\":\"Dialogues_item__-Riak\",\"messageBlock\":\"Dialogues_messageBlock__A5ieY\",\"messages\":\"Dialogues_messages__JfqxH\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogueItem_item__7e4Au\",\"block\":\"DialogueItem_block__J5Vmt\",\"avatar\":\"DialogueItem_avatar__e2f3v\",\"active\":\"DialogueItem_active__IBmaT\",\"inactive\":\"DialogueItem_inactive__4jKJW\"};","import React from 'react';\nimport s from \"./DialogueItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport avatar from '../../../../assets/images/user.png';\n\ntype DialogueItemType = {\n    name: string\n    id: number\n}\nconst DialogueItem = (props: DialogueItemType) => {\n    return (\n        <div className={s.item}>\n            <NavLink to={`/dialogues/${props.id}`} className={({isActive}) => isActive ? s.active : s.inactive}>\n                <div className={s.block}>\n                    <img src={avatar} className={s.avatar} alt={'avatar'}/>\n                    {props.name}\n                </div>\n            </NavLink>\n        </div>\n    );\n};\n\nexport default DialogueItem;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Message_wrapper__vRQbe\",\"message\":\"Message_message__0SEI0\",\"avatar\":\"Message_avatar__HoJ1U\",\"bubble\":\"Message_bubble__wVYr+\",\"angle\":\"Message_angle__rTvNJ\",\"text\":\"Message_text__9-kTd\",\"time\":\"Message_time__26ikw\"};","import React from 'react';\nimport s from \"./Message.module.css\";\nimport avatar from '../../../../assets/images/user.png';\n\ntype MessageType = {\n    message: string\n}\nconst Message = (props: MessageType) => {\n    const hour = new Date().getHours();\n    const getMinutes = () => {\n        let minute = new Date().getMinutes()\n        if (minute < 10) {\n            return '0' + minute\n        } else {\n            return minute\n        }\n    }\n    const minutes = getMinutes()\n\n    return (\n        <div className={s.message}>\n            <img src={avatar} alt={'avatar'} className={s.avatar}/>\n\n            <div className={s.angle}/>\n\n            <div className={s.bubble}>\n                <div className={s.text}>{props.message}</div>\n            </div>\n            <div className={s.time}>{`${hour}:${minutes}`}</div>\n        </div>\n    );\n};\n\nexport default Message;","import React from 'react';\nimport {Form, Formik} from \"formik\";\nimport s from '../../../../common/Button/Button.module.css'\nimport FormControl from \"../../../../common/FormControl/FormControl\";\nimport * as Yup from \"yup\";\n\ntype AddMessageFormType = {\n    sendMessage: (values: string) => void\n}\ntype InitialValuesType = {\n    newMessage: string\n}\n\nconst AddMessageForm = (props: AddMessageFormType) => {\n    const initialValues: InitialValuesType = {\n        newMessage: ''\n    }\n    let addNewMessage = (values: InitialValuesType) => {\n        props.sendMessage(values.newMessage);\n    }\n    const validationSchema = Yup.object({\n        newMessage: Yup.string().max(3000, `The message is too long`).required('required')\n    })\n\n    return (\n        <div>\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, {resetForm}) => {\n                addNewMessage(values);\n                resetForm({values: {newMessage: ''}})\n            }}>\n            <Form>\n                <FormControl control={'textarea'} name={'newMessage'} placeholder={\"add a message ...\"}/>\n                <button className={s.button} type={'submit'}>Send</button>\n            </Form>\n        </Formik>\n        </div>\n    )\n}\n\nexport default AddMessageForm;","import React from 'react';\nimport s from './Dialogues.module.css'\nimport DialogueItem from \"./DialogueItem/DialogueItem\";\nimport Message from \"./Message/Message\";\nimport {DialoguesPageType} from \"../../../redux/dialogues-reducer\";\nimport {Navigate} from \"react-router-dom\";\nimport AddMessageForm from \"./Message/AddMessageForm\";\n\ntype DialoguesPropsType = {\n    dialoguesPage: DialoguesPageType\n    sendMessage: (newMessage: string) => void\n    isAuth: boolean\n}\n\nconst Dialogues = (props: DialoguesPropsType) => {\n\n    let dialoguesElements = props.dialoguesPage.dialogues.map(d => <DialogueItem key={d.id} name={d.name} id={d.id}/>);\n    let messagesElements = props.dialoguesPage.messages.map(m => <Message key={m.id} message={m.message}/>);\n\n    const addNewMessage = (newMessage: string) => {\n        props.sendMessage(newMessage)\n    }\n\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\n    return (\n        <div className={s.dialogues}>\n            <div className={s.dialoguesItems}>\n                {dialoguesElements}\n            </div>\n            <div className={s.messageBlock}>\n                <div className={s.messages}>\n                    <div className={s.item}>{messagesElements}</div>\n                </div>\n                <AddMessageForm sendMessage={addNewMessage}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogues;","import {DialoguesPageType, sendMessageAC} from \"../../../redux/dialogues-reducer\";\nimport Dialogues from \"./Dialogues\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../../../redux/store\";\nimport {compose, Dispatch} from \"redux\";\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\nimport React from \"react\";\n\ntype MapStateToPropsType = {\n    dialoguesPage: DialoguesPageType\n    isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n    sendMessage: (newMessage: string) => void\n}\ntype DialoguesContainerType = MapDispatchToPropsType & MapStateToPropsType\n\nconst DialoguesContainer = (props: DialoguesContainerType ) => {\n    return <Dialogues dialoguesPage={props.dialoguesPage} sendMessage={props.sendMessage} isAuth={props.isAuth}/>\n}\n\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n    return {\n        dialoguesPage: state.dialoguesPage,\n        isAuth: state.auth.isAuth\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        sendMessage: (newDialogueText: string) => {\n            dispatch(sendMessageAC(newDialogueText))\n        }\n    }\n}\nexport default compose<React.ComponentType>(withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps))(DialoguesContainer);\n"],"names":["props","className","s","to","id","isActive","src","avatar","alt","name","hour","Date","getHours","minutes","minute","getMinutes","message","validationSchema","Yup","newMessage","max","required","initialValues","onSubmit","values","resetForm","sendMessage","addNewMessage","FormControl","control","placeholder","type","dialoguesElements","dialoguesPage","dialogues","map","d","messagesElements","messages","m","isAuth","compose","withAuthRedirect","connect","state","auth","dispatch","newDialogueText","sendMessageAC"],"sourceRoot":""}